//TimeComplexity.  O(n)
//SpaceComplexity. O(1)

class Solution {
    public int jump(int[] nums) {
        
      

            int curr = nums[0];
            int next = nums[0];

  if(nums.length < 2)return 0;
            int jump = 1;

            for(int i = 1; i < nums.length; i++){
                next = Math.max(next, i+nums[i]);

                if(i == curr && i != nums.length -1){
                    jump++;
                    curr = next;
                }
            }
            return jump;
    }
}
